name: Rust

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  EXECUTABLE_NAME: "linux-terminal-buddy"

jobs:
  extract-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}

    steps:
    - uses: actions/checkout@v4

    - name: Extract version from Cargo.toml
      id: extract_version
      run: |
        version=$(grep '^version =' Cargo.toml | sed 's/version = \"//;s/\"//')
        echo "version=$version" >> $GITHUB_OUTPUT

  build-linux-x86_64:
    runs-on: ubuntu-latest

    env:
      IDENTIFIER: "x86_64-Linux"

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      run: rustup update stable

    - name: Run tests
      run: cargo test --release --verbose

    - name: Build ${{ env.IDENTIFIER }}
      run: cargo build --release --verbose

    - name: Create release artifact
      run: |
        mkdir -p artifacts
        cp target/release/${{ env.EXECUTABLE_NAME }} artifacts/${{ env.EXECUTABLE_NAME }}-${{ env.IDENTIFIER }}
      
  build-windows-x86_64:
    runs-on: windows-latest

    env:
      IDENTIFIER: "x86_64-Windows"
  
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      run: rustup update stable

    - name: Run tests
      run: cargo test --release --verbose

    - name: Build ${{ env.IDENTIFIER }}
      run: cargo build --release --verbose
    
    - name: Create release artifact
      run: |
        mkdir -p artifacts
        cp target/release/${{ env.EXECUTABLE_NAME }}.exe artifacts/${{ env.EXECUTABLE_NAME }}-${{ env.IDENTIFIER }}.exe

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.EXECUTABLE_NAME }}-${{ env.IDENTIFIER }}
        path: artifacts/

  release:
    runs-on: ubuntu-latest
    needs:
      - extract-version
      - build-linux-x86_64
      - build-windows-x86_64

    env:
      EXTRACTED_VERSION: ${{ needs.extract-version.outputs.version }}
      WINDOWS_AMD64_PATH: "${{ github.env.EXECUTABLE_NAME }}-x86_64-Windows"
      LINUX_AMD64_PATH: "${{ github.env.EXECUTABLE_NAME }}-x86_64-Linux"
      ARTIFACTS_DIR: "downloaded-artifacts/"
    
    steps:
    - uses: actions/checkout@v4

    - name: Install github CLI
      run: sudo apt install gh -y
    
    - name: Download Linux Artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.LINUX_AMD64_PATH }}
        path: ${{ env.ARTIFACTS_DIR }}

    - name: Download Windows Artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.WINDOWS_AMD64_PATH }}
        path: ${{ env.ARTIFACTS_DIR }}
    
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create $EXTRACTED_VERSION \
          ${{ env.ARTIFACTS_DIR }}${{ env.LINUX_AMD64_PATH }} \
          ${{ env.ARTIFACTS_DIR }}${{ env.WINDOWS_AMD64_PATH }}.exe \
          --title "Release $EXTRACTED_VERSION" \
          --notes "Automated release of version $EXTRACTED_VERSION."
    